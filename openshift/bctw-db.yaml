apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: bctw-db
objects:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "interface": "eth0",
            "ips": [
                "10.97.51.86"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "interface": "eth0",
            "ips": [
                "10.97.51.86"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        bctw-db; cpu limit for container bctw-db'
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: bctw-db
      openshift.io/deployment.name: bctw-db-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: bctw-db-1-
    labels:
      app: bctw-db
      deployment: bctw-db-1
      deploymentconfig: bctw-db
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: bctw-db-1
      uid: 28ad016f-e1c1-4be5-b8e7-3e1b2e7c65e7
  spec:
    containers:
    - env:
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: bctw
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: bctw
      - name: POSTGRESQL_DATABASE
        value: bctw
      image: image-registry.openshift-image-registry.svc:5000/0dff19-tools/postgres-postgis@sha256:720b6ade23b8d25a6280494eeea5e786813761bd1a92214d89e8a5843962f050
      imagePullPolicy: Always
      name: bctw-db
      ports:
      - containerPort: 5432
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 2Gi
        requests:
          cpu: 50m
          memory: 1Gi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1005840000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: volume-qvg1l
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p887k
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-wv6g8
    nodeName: mcs-silver-app-40.dmz
    nodeSelector:
      node-role.kubernetes.io/worker: ""
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1005840000
      seLinuxOptions:
        level: s0:c76,c70
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: volume-qvg1l
      persistentVolumeClaim:
        claimName: bctw-data
    - name: default-token-p887k
      secret:
        defaultMode: 420
        secretName: default-token-p887k
  status: {}
